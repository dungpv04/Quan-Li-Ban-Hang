// <auto-generated />
using System;
using Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Database.Models.ChiTietHDBan", b =>
                {
                    b.Property<string>("MaHDBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaHang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaHDBan", "MaHang");

                    b.HasIndex("MaHang");

                    b.ToTable("ChiTietHDBans");
                });

            modelBuilder.Entity("Database.Models.ChiTietHDNhap", b =>
                {
                    b.Property<string>("MaHDNhap")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaHang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<decimal>("ChietKhau")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaHDNhap", "MaHang");

                    b.HasIndex("MaHang");

                    b.ToTable("ChiTietHDNhaps");
                });

            modelBuilder.Entity("Database.Models.Hang", b =>
                {
                    b.Property<string>("MaHang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("DonGiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DonGiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MaLoai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaNCC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaThuongHieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaHang");

                    b.HasIndex("MaLoai");

                    b.HasIndex("MaNCC");

                    b.HasIndex("MaThuongHieu");

                    b.ToTable("Hangs");
                });

            modelBuilder.Entity("Database.Models.HoaDonBan", b =>
                {
                    b.Property<string>("MaHDBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaKhach")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayBan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaHDBan");

                    b.HasIndex("MaKhach");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("HoaDonBans");
                });

            modelBuilder.Entity("Database.Models.HoaDonNhap", b =>
                {
                    b.Property<string>("MaHDNhap")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaNCC")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayNhap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaHDNhap");

                    b.HasIndex("MaNCC");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("HoaDonNhaps");
                });

            modelBuilder.Entity("Database.Models.Khach", b =>
                {
                    b.Property<string>("MaKhach")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenKhach")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhach");

                    b.ToTable("Khachs");
                });

            modelBuilder.Entity("Database.Models.LoaiHang", b =>
                {
                    b.Property<string>("MaLoai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLoai");

                    b.ToTable("LoaiHangs");
                });

            modelBuilder.Entity("Database.Models.NhaCungCap", b =>
                {
                    b.Property<string>("MaNCC")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenNCC")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNCC");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("Database.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DienThoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("Database.Models.ThuongHieu", b =>
                {
                    b.Property<string>("MaThuongHieu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nuoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenThuongHieu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaThuongHieu");

                    b.ToTable("ThuongHieus");
                });

            modelBuilder.Entity("Database.Models.ChiTietHDBan", b =>
                {
                    b.HasOne("Database.Models.HoaDonBan", "HoaDonBan")
                        .WithMany("ChiTietHDBans")
                        .HasForeignKey("MaHDBan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Hang", "Hang")
                        .WithMany("ChiTietHDBans")
                        .HasForeignKey("MaHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hang");

                    b.Navigation("HoaDonBan");
                });

            modelBuilder.Entity("Database.Models.ChiTietHDNhap", b =>
                {
                    b.HasOne("Database.Models.HoaDonNhap", "HoaDonNhap")
                        .WithMany("ChiTietHDNhaps")
                        .HasForeignKey("MaHDNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Models.Hang", "Hang")
                        .WithMany("ChiTietHDNhaps")
                        .HasForeignKey("MaHang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Hang");

                    b.Navigation("HoaDonNhap");
                });

            modelBuilder.Entity("Database.Models.Hang", b =>
                {
                    b.HasOne("Database.Models.LoaiHang", "LoaiHang")
                        .WithMany("Hangs")
                        .HasForeignKey("MaLoai")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("Hangs")
                        .HasForeignKey("MaNCC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Models.ThuongHieu", "ThuongHieu")
                        .WithMany("Hangs")
                        .HasForeignKey("MaThuongHieu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LoaiHang");

                    b.Navigation("NhaCungCap");

                    b.Navigation("ThuongHieu");
                });

            modelBuilder.Entity("Database.Models.HoaDonBan", b =>
                {
                    b.HasOne("Database.Models.Khach", "Khach")
                        .WithMany("HoaDonBans")
                        .HasForeignKey("MaKhach")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDonBans")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Khach");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Database.Models.HoaDonNhap", b =>
                {
                    b.HasOne("Database.Models.NhaCungCap", "NhaCungCap")
                        .WithMany("HoaDonNhaps")
                        .HasForeignKey("MaNCC")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Database.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDonNhaps")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("NhaCungCap");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("Database.Models.Hang", b =>
                {
                    b.Navigation("ChiTietHDBans");

                    b.Navigation("ChiTietHDNhaps");
                });

            modelBuilder.Entity("Database.Models.HoaDonBan", b =>
                {
                    b.Navigation("ChiTietHDBans");
                });

            modelBuilder.Entity("Database.Models.HoaDonNhap", b =>
                {
                    b.Navigation("ChiTietHDNhaps");
                });

            modelBuilder.Entity("Database.Models.Khach", b =>
                {
                    b.Navigation("HoaDonBans");
                });

            modelBuilder.Entity("Database.Models.LoaiHang", b =>
                {
                    b.Navigation("Hangs");
                });

            modelBuilder.Entity("Database.Models.NhaCungCap", b =>
                {
                    b.Navigation("Hangs");

                    b.Navigation("HoaDonNhaps");
                });

            modelBuilder.Entity("Database.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDonBans");

                    b.Navigation("HoaDonNhaps");
                });

            modelBuilder.Entity("Database.Models.ThuongHieu", b =>
                {
                    b.Navigation("Hangs");
                });
#pragma warning restore 612, 618
        }
    }
}
